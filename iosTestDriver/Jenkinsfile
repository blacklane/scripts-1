
start()

def start() {
  try {
    testAcceptance() 
  } finally {
    sendBuildEmail()
  }
}

def testAcceptance() {
  node('acceptance') {
    env.LANG = "en_US.UTF-8"
    env.LANGUAGE = "en_US.UTF-8"
    env.LC_ALL = "en_US.UTF-8"

    stage ('Clean & Git checkout') {
      deleteDir()
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/blacklane/troy/']]])
      echo 'Workspace is at: ' + env.BUILD_URL + 'execution/node/3/ws/'
    }

    stage ('Start iOS tests') {
      timeout(time: 30, unit: 'MINUTES') {
        echo 'Running iOS tests...'
        try {
          echo 'Launch simulator manually'
          sh "open /Applications/Xcode.app/Contents/Developer/Applications/Simulator.app"
          BUILD_STATUS = sh ( 
            script: "bash -l -c \"xcodebuild -workspace DriverApp.xcworkspace -scheme AcceptanceTests " +
                    "-destination 'platform=iOS Simulator,name=iPhone 6,OS=10.3.1' test | " +
                    "tee test_results.log | " +
                    "xcpretty --report html --output test_results.html\"",
            returnStdout: true 
          )
        } finally {
          echo 'Killing the simulator...'
          sh "killall \"Simulator\" || true"
        }
      }
    }
  }
}

/**
 * Notify listed users of test run results
 */
def sendBuildEmail() {
  node('acceptance') {
    $subject = 'Troy Acceptance Tests: Daily Report'
    $body = '<p>Check results using link ' + env.BUILD_URL + '</p><p>HTML Report: ' + env.BUILD_URL + 'execution/node/3/ws/test_results.html</p><p>Text Log Report: ' + env.BUILD_URL + 'execution/node/3/ws/test_results.log</p>'
    $to = ('sofia.vistas@blacklane.com, matthew.bogott@blacklane.com')
    emailext attachLog:false, body:$body, subject:$subject, to:$to, mimeType:'text/html'
  }
}
