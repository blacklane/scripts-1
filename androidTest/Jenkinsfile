TEST_PACKAGE="com.blacklane.passenger.test.acceptance"
RUNNER="com.blacklane.passenger.test.RxJUnitRunner"
APP_ID="com.blacklane.passenger.dev"

EMULATOR_PORT="5554"// must be an even number between 5554-5584
EMULATOR_ID="emulator-${EMULATOR_PORT}"
EMULATOR_AVD="API_25_Acceptance_Tests"

start()
def start() {
  try {
   testAcceptance()
  } finally {
      sendBuildEmail()
  }
} 

def testAcceptance() {
  node('ios') {
    stage ('Clean & Git checkout') {
      deleteDir()
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/blacklane/pepper/']]])
      echo 'Workspace is at: ' + env.BUILD_URL + 'execution/node/3/ws/'
    }
    stage ('Start emulator and results folder') {
      sh "curl https://raw.githubusercontent.com/blacklane/zulu-scripts/master/androidTest/wait_for_emulator.sh -o wait_for_emulator.sh"
      sh "chmod +x wait_for_emulator.sh"
      sh "./wait_for_emulator.sh ${EMULATOR_PORT} ${EMULATOR_AVD}"
      sh "mkdir -p results"
    }
    stage ('Run login tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running login tests..."
          try {
            sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.LoginTests"
          } catch (err) {
           
         }
        echo "Copying results to Login folder..."
        sh "cp -r app/build/spoon results/LoginTests"
      }
    }
    stage ('Run booking tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running booking tests..."
          try {
           sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.BookingTests"
         } catch (err) {
         
        }
        echo "Copying results to Booking folder"
        sh "cp -r app/build/spoon results/BookingTests"
      }
    }
    stage ('Run registration tests') {
      timeout(time: 15, unit: 'MINUTES') { 
        echo "Running registration tests..."
          try {
            sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.RegistrationTests"
          } catch (err) {
           
          }
        echo "Copying results to Registration folder..."
        sh "cp -r app/build/spoon results/RegistrationTests"
      }
    }
    stage ('Run rides tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running rides tests..."
        try {
          sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.RidesTests"
        } catch (err) {
          
        }
        echo "Copying results to Rides folder..."
        sh "cp -r app/build/spoon results/RidesTests"
      }
    }
    stage ('Run profile tests') {
      timeout(time: 15, unit: 'MINUTES') {
      echo "Running profile tests..."
        try {
         sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.ProfileTests"
       } catch (err) {
          
        }
        echo "Copying results to Profile folder..."
        sh "cp -r app/build/spoon results/ProfileTests"
      }
    }
    stage ('Run payments tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running payments tests..."
        try {
         sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.ManagePaymentsTests"
        } catch (err) {
         
        }
       echo "Copying results to Manage Payments folder..."
       sh "cp -r app/build/spoon results/ManagePaymentsTests"
      }
    }
    stage ('Run support tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running support tests..."
        try {
          sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.SupportTests"
        } catch (err) {
         
        }
        echo "Copying results to Support folder..."
        sh "cp -r app/build/spoon results/SupportTests"
      }
    }
    stage ('Run forgot password tests') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Running password tests..."
        try {
        sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.ForgotPasswordTests"
        } catch (err) {
        
        }
        echo "Copying results to Forgot Password folder..."
        sh "cp -r app/build/spoon results/ForgotPasswordTests"
      }
    }
    stage ('Kill emulator') {
      timeout(time: 15, unit: 'MINUTES') {
        echo "Killing the emulator..."
        try {
        sh "adb -s ${EMULATOR_ID} emu kill"
        } catch (err) {
        
        }
      }
    }
    stage ('Assemble email report') {
      echo "Sending report"

      sh "curl https://raw.githubusercontent.com/blacklane/zulu-scripts/master/androidTest/email_report_builder.py -o email_report_builder.py"
      sh "touch email-report.html"
      sh "python email_report_builder.py"
    }
  }
}

def sendBuildEmail() {
  node('ios') {
    $subject = 'Pepper Acceptance Tests daily digest!'
    $body = readFile 'email-report.html'
    $to = ('sofia.vistas@blacklane.com, matthew.bogott@blacklane.com')
    emailext attachLog:false, body:$body, subject:$subject, to:$to, mimeType:'text/html'
 
  }
}
