
TEST_PACKAGE="com.blacklane.passenger.test.acceptance"
RUNNER="com.blacklane.passenger.test.RxJUnitRunner"
APP_ID="com.blacklane.passenger.dev"

EMULATOR_PORT="5554"// must be an even number between 5554-5584
EMULATOR_ID="emulator-${EMULATOR_PORT}"
EMULATOR_AVD="API_25_Acceptance_Tests"

start()
def start() {
  try {
    testAcceptance() 
  } catch  (err) {
    sendBuildFailureEmail(err)
  }
}

/**
 * Invoked when a pull request is created or a pull request is updated.
 */
def testAcceptance() {
  node('ios') {
    stage ('Clean & Git checkout') {
      deleteDir()
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/blacklane/pepper/']]])
      echo 'Workspace is at: ' + env.BUILD_URL + 'execution/node/3/ws/'
    }
    stage ('Assemble debug') {
      sh "./gradlew assembleDebug assembleDebugAndroidTest"
    }
    stage ('Start emulator') {
      sh "curl https://raw.githubusercontent.com/blacklane/zulu-scripts/master/androidTest/wait_for_emulator.sh -o wait_for_emulator.sh"
      sh "chmod +x wait_for_emulator.sh"
      sh "./wait_for_emulator.sh ${EMULATOR_PORT} ${EMULATOR_AVD}"
    }
    stage ('Installing apks and results folder') {
      echo "Installing apks on emulator"
      sh "adb -s ${EMULATOR_ID} install -r -d app/build/outputs/apk/app-debug.apk"
      sh "adb -s ${EMULATOR_ID} install -r -d app/build/outputs/apk/app-debug-androidTest.apk"
      sh "mkdir -p results"
    }
    stage ('Run login tests') {
      echo "Running login tests..."
      sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.LoginTests"
      echo "Copying results to Login folder..."
      sh "cp -r app/build/spoon results/LoginTests"
    }
    stage ('Run booking tests') {
      echo "Running booking tests..."
      sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.BookingTests"
      echo "Copying results to Booking folder"
      sh "cp -r app/build/spoon results/BookingTests"
    }
    stage ('Run registration tests') {
      echo "Running registration tests..."
      sh "./gradlew spoon -PspoonClassName=com.blacklane.passenger.test.acceptance.RegistrationTests"
      echo "Copying results to Registration folder..."
      sh "cp -r app/build/spoon results/RegistrationTests"
    }
    stage ('Kill emulator') {
      echo "Killing the emulator..."
      sh "adb -s ${EMULATOR_ID} emu kill"
    }
  }
}

/**
 * Invoked when any build process fails.
 * An email will be sent to the 'committer email' on the last commit.
 */
def sendBuildFailureEmail(err) {
  node('ios') {
    $subject = 'Pepper Acceptance Tests have failed'
    $body = '<p>Check failure using link ' + env.BUILD_URL + '</p>'
    $to = 'sofia.vistas@blacklane.com'
    emailext attachLog:false, body:$body, subject:$subject, to:$to, mimeType:'text/html'
    currentBuild.result = "Failure"
    error(err.getMessage())
  }
}
