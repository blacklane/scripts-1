TEST_PACKAGE="com.blacklane.passenger.test.acceptance"
RUNNER="com.blacklane.passenger.test.RxJUnitRunner"
APP_ID="com.blacklane.passenger.dev"

EMULATOR_PORT_ONE="5554"// must be an even number between 5554-5584
EMULATOR_PORT_TWO="5556"// must be an even number between 5554-5584
EMULATOR_PORT_THREE="5558"// must be an even number between 5554-5584

EMULATOR_ID_ONE="emulator-${EMULATOR_PORT_ONE}"
EMULATOR_ID_TWO="emulator-${EMULATOR_PORT_TWO}"
EMULATOR_ID_THREE="emulator-${EMULATOR_PORT_THREE}"

EMULATOR_AVD_25="API_25_Acceptance_Tests"
EMULATOR_AVD_24="API_24_Acceptance_Tests"
EMULATOR_AVD_23="API_23_Acceptance_Tests"

start()
def start() {
  try {
   testAcceptance()
  } finally {
      sendBuildEmail()
  }
} 

def testAcceptance() {
  node('iosdeploy') {
    stage ('Clean & Git checkout') {
      deleteDir()
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/blacklane/pepper/']]])
      echo 'Workspace is at: ' + env.BUILD_URL + 'execution/node/3/ws/'
    }
    stage ('Start emulators and results folder') {
      sh "curl https://raw.githubusercontent.com/blacklane/zulu-scripts/master/androidTest/wait_for_emulator.sh -o wait_for_emulator.sh"
      sh "chmod +x wait_for_emulator.sh"
      sh "./wait_for_emulator.sh ${EMULATOR_PORT_ONE} ${EMULATOR_AVD_25}"
      sh "./wait_for_emulator.sh ${EMULATOR_PORT_TWO} ${EMULATOR_AVD_24}"
      sh "./wait_for_emulator.sh ${EMULATOR_PORT_THREE} ${EMULATOR_AVD_23}"
      sh "mkdir -p results"
    }
    stage ('Run tests') {
      timeout(time: 40, unit: 'MINUTES') {

        echo "Running acceptance tests..."

        sh "./gradlew spoon"

        echo "Copying results to the folder..."
        sh "cp -r app/build/spoon results"
      }    
    }
    stage ('Kill emulator') {
      timeout(time: 5, unit: 'MINUTES') {
        echo "Killing the emulator..."
        try {
          sh "adb -s ${EMULATOR_ID_ONE} emu kill"
          sh "adb -s ${EMULATOR_ID_TWO} emu kill"
          sh "adb -s ${EMULATOR_ID_THREE} emu kill"  
        } catch (err) {
        
        }
      }
    }
    stage ('Assemble email report') {
      echo "Sending report"

      sh "curl https://raw.githubusercontent.com/blacklane/zulu-scripts/master/androidTest/email_report_builder.py -o email_report_builder.py"
      sh "touch email-report.html"
      sh "python email_report_builder.py"
    }
  }
}

def sendBuildEmail() {
  node('iosdeploy') {
    $subject = 'Pepper Acceptance Tests daily digest!'
    $body = readFile 'email-report.html'
    $to = ('sofia.vistas@blacklane.com, matthew.bogott@blacklane.com')
    emailext attachLog:false, body:$body, subject:$subject, to:$to, mimeType:'text/html'
 
  }
}
