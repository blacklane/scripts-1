
start()

def start() {
  testAcceptance() 
}

def testAcceptance() {
  node('ios') {
    stage ('Clean & Git checkout') {
      deleteDir()
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'github', url: 'https://github.com/blacklane/cassandra/']]])
      echo 'Workspace is at: ' + env.BUILD_URL + 'execution/node/3/ws/'
    }
    stage ('Start iOS tests') {
      timeout(time: 45, unit: 'MINUTES') {
        echo "Running iOS tests..."
        try {
          sh "xcodebuild -workspace Blacklane.xcworkspace -scheme BlacklaneAcceptanceTests -destination 'platform=iOS Simulator,name=iPhone 7' test | tee results/raw_output.log | xcpretty --report html --output results/report.html"
        } catch (err) {
          sendBuildFailureEmail(err)
        } finally {
          echo "Killing the simulator..."
          sh "killall \"Simulator\""
        }
      }
    }
  }
}

/**
 * Invoked when any build process fails.
 * An email will be sent to the 'committer email' on the last commit.
 */
def sendBuildFailureEmail(err) {
  node('') {
    $subject = 'Cassandra Acceptance Tests have failed'
    $body = '<p>Check failure using link ' + env.BUILD_URL + '</p><p>HTML Report: ' + env.BUILD_URL + 'execution/node/3/ws/results/report.html</p><p>Text Log Report: ' + env.BUILD_URL + 'execution/node/3/ws/results/raw_output.log</p>'
    $to = ('sofia.vistas@blacklane.com, matthew.bogott@blacklane.com')
    emailext attachLog:false, body:$body, subject:$subject, to:$to, mimeType:'text/html'
    error(err.getMessage())
  }
}